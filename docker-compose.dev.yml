version: "3.8"
x-django-build-env: &django-build-env
  USER_NAME: "${DOCKER_USER_NAME}"
  USER_UID: "${DOCKER_USER_UID}"
  USER_GID: "${DOCKER_USER_GID}"

x-django-env: &django-env
  DEBUG: "True"
  SECRET_KEY: "${SECRET_KEY}"
  ALLOWED_HOSTS: "${APP_DOMAIN} localhost 127.0.0.1 [::1]"
  APP_NAME: "${APP_NAME}"
  APP_SITE_NAME: "${APP_SITE_NAME} (dev)"
  POSTGRES_HOST: "django-db"
  POSTGRES_PORT: "5432"
  MONGO_HOST: "mongodb"
  RABBITMQ_HOST: "broker"
  RABBITMQ_PORT: "5672"
  REDIS_HOST: "cache"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  DJANGO_SUPERUSER_USERNAME: "${DJANGO_SUPERUSER_USERNAME}"
  DJANGO_SUPERUSER_PASSWORD: "${DJANGO_SUPERUSER_PASSWORD}"
  DJANGO_SUPERUSER_EMAIL: "${DJANGO_SUPERUSER_EMAIL}"
  DATA_UPLOAD_MAX_MEMORY_SIZE: "${DATA_UPLOAD_MAX_MEMORY_SIZE}"
  FILE_UPLOAD_MAX_MEMORY_SIZE: "${FILE_UPLOAD_MAX_MEMORY_SIZE}"
  VEP_ROOT_URL: "${VEP_ROOT_URL}"
  VEP_USERNAME: "${VEP_USERNAME}"
  VEP_PASSWORD: "${VEP_PASSWORD}"
  VEP_RELEASE: "${VEP_RELEASE}"

x-postgres-env: &postgres-env
  POSTGRES_DB: "${POSTGRES_DB}"
  POSTGRES_USER: "${POSTGRES_USER}"
  POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"

x-mongo-env: &mongo-env
  MONGO_DB: "${MONGO_DB}"
  MONGO_USER: "${MONGO_USER}"
  MONGO_PASSWORD: "${MONGO_PASSWORD}"
  MONGO_HOST: "${MONGO_HOST}"
  MONGO_PORT: "${MONGO_PORT}"

x-rabbitmq-env: &rabbitmq-env
  RABBITMQ_DEFAULT_VHOST: "${RABBITMQ_DEFAULT_VHOST}"
  RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
  RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"

x-email-env: &email-env
  EMAIL_HOST: "${EMAIL_HOST}"
  EMAIL_PORT: "${EMAIL_PORT}"
  EMAIL_HOST_USER: "${EMAIL_HOST_USER}"
  EMAIL_HOST_PASSWORD: "${EMAIL_HOST_PASSWORD}"
  EMAIL_USE_TLS: "${EMAIL_USE_TLS}"
  EMAIL_USE_SSL: "${EMAIL_USE_SSL}"

services:
  django:
    build:
      context: ./
      args:
        <<: *django-build-env
      target: development
    image: ${DJANGO_DOCKER_IMAGE_NAME}_dev:${DJANGO_DOCKER_IMAGE_VERSION}
    volumes:
      - ./:/code
      - django-media:/code/media
      - django-static:/code/static
      - django-venv:/code/venv
      - django-tox:/code/.tox
    environment:
      <<:
        [
          *django-env,
          *rabbitmq-env,
          *postgres-env,
          *email-env,
          *mongo-env,
          *elastic-env
        ]
    expose:
      - "8000"
    ports:
      - "${DJANGO_HOST_PORT_DEV}:8000"
      - "5555:5555"
    command:
      - "./utils/wait-for-postgres.sh"
      - "./utils/wait-for-rabbitmq.sh"
      - "make"
      - "-C"
      - "/code"
      - "sleep"
    depends_on:
      - django-db
      - broker
      - cache
      - elasticsearch
    restart: unless-stopped

  django-db:
    image: postgres:${POSTGRES_VERSION}-alpine
    shm_size: 10g
    volumes:
      - django-db-data:/var/lib/postgresql/data
    environment:
      <<: *postgres-env
    expose:
      - "5432"
    ports:
      - "${POSTGRES_HOST_PORT_DEV}:5432"
    restart: unless-stopped

  broker:
    image: rabbitmq:${RABBITMQ_VERSION}-management-alpine
    volumes:
      - broker-data:/var/lib/rabbitmq
    environment:
      <<: *rabbitmq-env
    expose:
      - "5672"
    ports:
      - "${RABBITMQ_HOST_PORT_DEV}:5672"
      - "${RABBITMQ_MANAGEMENT_HOST_PORT}:15672"
    restart: unless-stopped

  cache:
    image: redis:${REDIS_VERSION}-alpine
    volumes:
      - cache-data:/data
    expose:
      - "6379"
    ports:
      - "${REDIS_HOST_PORT_DEV}:6379"
    restart: unless-stopped

  flower:
    image: mher/flower:${FLOWER_VERSION}
    command: "celery --broker=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@broker:${RABBITMQ_HOST_PORT_DEV}/${RABBITMQ_DEFAULT_VHOST} flower --basic-auth=${FLOWER_USER}:${FLOWER_PASSWORD} --broker_api=http://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@broker:${RABBITMQ_MANAGEMENT_HOST_PORT}/api/vhosts"
    ports:
      - ${FLOWER_PORT}:5555
    depends_on:
      - broker
    restart: unless-stopped

volumes:
  broker-data:
    external: false
    name: "${APP_NAME}_dev_broker-data"

  cache-data:
    external: false
    name: "${APP_NAME}_dev_cache-data"

  django-db-data:
    external: false
    name: "${APP_NAME}_dev_django-db-data"

  django-media:
    external: false
    name: "${APP_NAME}_dev_django-media"

  django-static:
    external: false
    name: "${APP_NAME}_dev_django-static"

  django-venv:
    external: false
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./venv
    name: "${APP_NAME}_dev_django-venv"
